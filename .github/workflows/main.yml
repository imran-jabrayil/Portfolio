name: Build and Deploy to Nomad

on:
  workflow_dispatch:

env:
  NOMAD_VERSION: "1.9.4"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from .csproj
        id: extract_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Portfolio/Portfolio.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Build Docker Image
        run: |
          docker build -t cimran2001/portfolio:$VERSION -f Portfolio/Dockerfile .
          docker tag cimran2001/portfolio:$VERSION cimran2001/portfolio:latest

      - name: Push Docker Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push cimran2001/portfolio:$VERSION
          docker push cimran2001/portfolio:latest

  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: read
    
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from .csproj
        id: extract_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Portfolio/Portfolio.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Fetch `portfolio.nomad` from server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP:/$SERVER_USER/nomad-jobs/portfolio/portfolio.nomad portfolio.nomad

      - name: Update Docker Image Version in Nomad File
        run: |
          sed -i "s|image = \"cimran2001/portfolio:latest\"|image = \"cimran2001/portfolio:$VERSION\"|g" portfolio.nomad
          echo "portfolio.nomad updated to version $VERSION"

      - name: Setup `nomad`
        uses: hashicorp/setup-nomad@main
        with:
          version: ${{ env.NOMAD_VERSION }}

      - name: Deploy to Nomad
        env:
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
        run: |
          OUTPUT=$(nomad job run portfolio.nomad )
          echo "$OUTPUT"
          
          DEPLOYMENT_ID=$(echo "$OUTPUT" | grep -oP '(?<=Monitoring deployment ")[a-f0-9]+')
          echo "Deployment ID: $DEPLOYMENT_ID"

          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          
      - name: Validate deploy
        env:
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
          DEPLOYMENT_ID: ${{ env.DEPLOYMENT_ID }}
        run: |
          DEPLOYMENT_OUTPUT=$(nomad deployment status "$DEPLOYMENT_ID")
          DEPLOYMENT_STATUS=$(echo "$DEPLOYMENT_OUTPUT" | awk -F 'Status[ ]*=[ ]*' '{print $2}' | awk '{print $1}' | tr -d '\n' | tr -d '\r')

          echo "Deployment Status: $DEPLOYMENT_STATUS"

          if [[ "$DEPLOYMENT_STATUS" == "successful" ]]; then
            exit 0
          else
            exit 1
          fi

      - name: Get changed files in the docs folder
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: Portfolio/**/*.{cs,cshtml,json,js,css}

      - name: Tag Git Repository
        if: success() && steps.changed-files.outputs.any_changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a v$VERSION -m "Release version $VERSION"
          git push origin v$VERSION