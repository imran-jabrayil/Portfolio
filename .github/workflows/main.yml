name: Build and Deploy to Nomad

on:
  push: 
    branches:
      - main
  workflow_dispatch:

env:
  NOMAD_VERSION: "1.9.4"

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from .csproj
        id: extract_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Portfolio/Portfolio.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
          
      - uses: mukunku/tag-exists-action@v1.4.0
        id: check-tag
        with:
          tag: v${{ env.VERSION }}

      - name: Build Docker Image
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          docker build -t cimran2001/portfolio:$VERSION -f Portfolio/Dockerfile .
          docker tag cimran2001/portfolio:$VERSION cimran2001/portfolio:latest

      - name: Push Docker Image to Docker Hub
        if: steps.check-tag.outputs.exists == 'false'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push cimran2001/portfolio:$VERSION
          docker push cimran2001/portfolio:latest

  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: read
    
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from .csproj
        id: extract_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Portfolio/Portfolio.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
          
      - uses: mukunku/tag-exists-action@v1.4.0
        id: check-tag
        with:
          tag: v${{ env.VERSION }}

      - name: Fetch `portfolio.nomad` from server
        if: steps.check-tag.outputs.exists == 'false'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP:/$SERVER_USER/nomad-jobs/portfolio/portfolio.nomad portfolio.nomad

      - name: Update Docker Image Version in Nomad File
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          sed -i "s|image = \"cimran2001/portfolio:latest\"|image = \"cimran2001/portfolio:$VERSION\"|g" portfolio.nomad
          echo "portfolio.nomad updated to version $VERSION"

      - name: Setup `nomad`
        if: steps.check-tag.outputs.exists == 'false'
        uses: hashicorp/setup-nomad@main
        with:
          version: ${{ env.NOMAD_VERSION }}

      - name: Deploy to Nomad
        if: steps.check-tag.outputs.exists == 'false'
        env:
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
        run: |
          OUTPUT=$(nomad job run portfolio.nomad )
          echo "$OUTPUT"
          
          DEPLOYMENT_ID=$(echo "$OUTPUT" | grep -oP '(?<=Monitoring deployment ")[a-f0-9]+')
          echo "Deployment ID: $DEPLOYMENT_ID"

          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          
      - name: Validate deploy
        if: steps.check-tag.outputs.exists == 'false'
        env:
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
          DEPLOYMENT_ID: ${{ env.DEPLOYMENT_ID }}
        run: |
          DEPLOYMENT_OUTPUT=$(nomad deployment status "$DEPLOYMENT_ID")
          DEPLOYMENT_STATUS=$(echo "$DEPLOYMENT_OUTPUT" | awk -F 'Status[ ]*=[ ]*' '{print $2}' | awk '{print $1}' | tr -d '\n' | tr -d '\r')

          echo "Deployment Status: $DEPLOYMENT_STATUS"

          if [[ "$DEPLOYMENT_STATUS" == "successful" ]]; then
            exit 0
          else
            exit 1
          fi

      - name: Bump version and push tag
        if: steps.check-tag.outputs.exists == 'false'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
